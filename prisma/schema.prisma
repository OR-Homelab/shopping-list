generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Access {
  id            Int          @id @default(autoincrement())
  shopping_list Int
  user_id       Int
  ShoppingList  ShoppingList @relation(fields: [shopping_list], references: [id], onDelete: NoAction, onUpdate: NoAction)
  User          User         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model ShoppingList {
  id           Int            @id @default(autoincrement())
  name         String?        @db.Char(50)
  user_owner   Int
  ShoppingItem ShoppingItem[]
  User         User           @relation(fields: [user_owner], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Access       Access[]
}

model Store {
  id           Int            @id @default(autoincrement())
  name         String?        @db.Char(50)
  ShoppingItem ShoppingItem[]
}

model Budget {
  id      Int       @id @default(autoincrement())
  month   DateTime? @db.Timestamp(6)
  user_id Int?
  User    User?     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model User {
  id           Int            @id @default(autoincrement())
  name         String?        @db.Char(255)
  email        String?        @db.Char(255)
  user_id      Int?
  Budget       Budget[]
  ShoppingList ShoppingList[]
  Access       Access[]
}

model ShoppingItem {
  id            Int           @id @default(autoincrement())
  shopping_list Int?
  item_name     String        @db.Char(50)
  item_amount   Int           @default(1)
  item_price    Int           @default(0)
  is_bought     Boolean       @default(false)
  store         Int
  ShoppingList  ShoppingList? @relation(fields: [shopping_list], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Store         Store         @relation(fields: [store], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
